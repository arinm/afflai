// Responsive breakpoints mixin
@use 'variables' as *;
@mixin breakpoint($point) {
  @if $point == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @else if $point == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @else if $point == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @else if $point == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
  @else if $point == 2xl {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Grid mixins
@mixin grid($columns: 1, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin grid-responsive($sm: 1, $md: 2, $lg: 3, $xl: 4, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($sm, 1fr);
  gap: $gap;
  
  @include breakpoint(md) {
    grid-template-columns: repeat($md, 1fr);
  }
  
  @include breakpoint(lg) {
    grid-template-columns: repeat($lg, 1fr);
  }
  
  @include breakpoint(xl) {
    grid-template-columns: repeat($xl, 1fr);
  }
}

// Typography mixins
@mixin heading($size, $weight: $font-weight-semibold, $margin-bottom: 1rem) {
  font-size: $size;
  font-weight: $weight;
  line-height: 1.3;
  margin-bottom: $margin-bottom;
  color: $heading-color;
}

@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Button mixins
@mixin button-base($padding-x: 1rem, $padding-y: 0.5rem, $font-size: $font-size-base) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $padding-y $padding-x;
  font-size: $font-size;
  font-weight: $font-weight-medium;
  line-height: 1.5;
  border-radius: $border-radius;
  transition: all $transition-normal ease;
  cursor: pointer;
  text-align: center;
  border: none;
  text-decoration: none;
}

@mixin button-variant($bg-color, $text-color, $hover-darken: 10%) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover, &:focus {
    background-color: darken($bg-color, $hover-darken);
    color: $text-color;
  }
  
  &:active {
    background-color: darken($bg-color, $hover-darken + 5%);
  }
}

@mixin button-outline($color, $bg-color: transparent) {
  background-color: $bg-color;
  color: $color;
  border: 1px solid $color;
  
  &:hover, &:focus {
    background-color: $color;
    color: white;
  }
  
  &:active {
    background-color: darken($color, 10%);
  }
}

// Card mixins
@mixin card($padding: $spacing-md, $radius: $border-radius, $bg-color: white) {
  background-color: $bg-color;
  border-radius: $radius;
  padding: $padding;
  box-shadow: $card-shadow;
  transition: transform $transition-normal ease, box-shadow $transition-normal ease;
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: $card-shadow-hover;
  }
}

// Transition mixins
@mixin transition($properties: all, $duration: $transition-normal, $timing-function: ease) {
  transition-property: $properties;
  transition-duration: $duration;
  transition-timing-function: $timing-function;
}

@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease forwards;
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
}

// Shadow mixins
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.08);
  } @else if $level == 2 {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);
  } @else if $level == 3 {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  } @else if $level == 4 {
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
}

// Accessibility mixins
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// Focus mixins
@mixin focus-ring($color: $primary-color, $offset: 2px, $width: 2px) {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 $offset rgba($color, 0.5);
  }
  
  &:focus-visible {
    outline: $width solid $color;
    outline-offset: $offset;
  }
}